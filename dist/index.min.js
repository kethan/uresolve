var uresolve=function(e){return e.resolve=(e,r={})=>({resolve:async(t,a)=>{if(0===Object.keys(e).length)return t;const n=async t=>{const n={};let s={};t=await(r.converter?r.converter(t,a):t);const o=new Set([...Object.keys(t),...Object.keys(e)]);if(await Promise.all(Array.from(o).map((async r=>{const o=void 0!==t[r]?t[r]:null,c=e[r]?await(async(r,t,n,s)=>{try{const s=await e[r](t,n,a);return void 0!==s?{[r]:s}:{}}catch(e){return s[r]={message:e.message},{}}})(r,o,t,n):{[r]:o};s={...s,...c}}))),Object.keys(n).length){const e=new Error("error");throw e.data=n,e}return s};return Array.isArray(t)?Promise.all(t.map(n)):n(t)}}),e}({});