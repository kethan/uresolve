var uresolver=function(r){return r.resolve=(r,e={})=>({resolve:async(t,a)=>{if(0===Object.keys(r).length)return t;const n=async t=>{const n={};let s={};t=await(e.converter?e.converter(t,a):t);const o=new Set([...Object.keys(t),...Object.keys(r)]);if(await Promise.all(Array.from(o).map((async e=>{const o=void 0!==t[e]?t[e]:null,c=r[e]?await(async(e,t,n,s)=>{try{const s=await r[e](t,n,a);return void 0!==s?{[e]:s}:{}}catch(r){return s[e]={message:r.message},{}}})(e,o,t,n):{[e]:o};s={...s,...c}}))),Object.keys(n).length){const r=new Error("error");throw r.data=n,r}return s};return Array.isArray(t)?Promise.all(t.map(n)):n(t)}}),r.virtual=r=>(e,t,a)=>r(t,a),r}({});